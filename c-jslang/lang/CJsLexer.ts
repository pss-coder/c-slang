// Generated from ./lang/CJs.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CJsLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly CHAR = 20;
	public static readonly STRING = 21;
	public static readonly WS = 22;
	public static readonly ADD = 23;
	public static readonly SUB = 24;
	public static readonly MUL = 25;
	public static readonly DIV = 26;
	public static readonly MOD = 27;
	public static readonly COMMA = 28;
	public static readonly PRINT = 29;
	public static readonly COLON = 30;
	public static readonly EQ = 31;
	public static readonly AND = 32;
	public static readonly OR = 33;
	public static readonly NOT = 34;
	public static readonly LPAREN = 35;
	public static readonly RPAREN = 36;
	public static readonly LCURLY = 37;
	public static readonly RCURLY = 38;
	public static readonly INT = 39;
	public static readonly ID = 40;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "CHAR", "STRING", "WS", "ADD", "SUB", "MUL", "DIV", 
		"MOD", "COMMA", "PRINT", "COLON", "EQ", "AND", "OR", "NOT", "LPAREN", 
		"RPAREN", "LCURLY", "RCURLY", "INT", "ID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'return'", "'struct'", "'while'", "'if'", "'else'", "'++'", 
		"'--'", "'&'", "'=='", "'<'", "'>'", "'>='", "'<='", "'void'", "'int'", 
		"'char'", "'void*'", "'int*'", "'char*'", undefined, undefined, undefined, 
		"'+'", "'-'", "'*'", "'/'", "'%'", "','", "'print'", "';'", "'='", "'&&'", 
		"'||'", "'!'", "'('", "')'", "'{'", "'}'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "CHAR", 
		"STRING", "WS", "ADD", "SUB", "MUL", "DIV", "MOD", "COMMA", "PRINT", "COLON", 
		"EQ", "AND", "OR", "NOT", "LPAREN", "RPAREN", "LCURLY", "RCURLY", "INT", 
		"ID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CJsLexer._LITERAL_NAMES, CJsLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CJsLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CJsLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "CJs.g4"; }

	// @Override
	public get ruleNames(): string[] { return CJsLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CJsLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CJsLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CJsLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02*\xEE\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x03\x02\x03\x02" +
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07" +
		"\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v" +
		"\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x15\x03\x15\x07\x15\xA6\n\x15\f\x15\x0E\x15\xA9" +
		"\v\x15\x03\x15\x03\x15\x03\x16\x03\x16\x07\x16\xAF\n\x16\f\x16\x0E\x16" +
		"\xB2\v\x16\x03\x16\x03\x16\x03\x17\x06\x17\xB7\n\x17\r\x17\x0E\x17\xB8" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03!\x03\"\x03\"" +
		"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x06(\xE4" +
		"\n(\r(\x0E(\xE5\x03)\x03)\x07)\xEA\n)\f)\x0E)\xED\v)\x03\xA7\x02\x02*" +
		"\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02" +
		"\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D" +
		"\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02" +
		"\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02" +
		"\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02" +
		"*\x03\x02\x06\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x05\x02C\\aac|\x06\x02" +
		"2;C\\aac|\x02\xF2\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02" +
		"\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r" +
		"\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13" +
		"\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19" +
		"\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F" +
		"\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02" +
		"\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02" +
		"\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03" +
		"\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02" +
		"\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02" +
		"A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02" +
		"\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02" +
		"\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x03S\x03\x02\x02\x02\x05Z\x03" +
		"\x02\x02\x02\x07a\x03\x02\x02\x02\tg\x03\x02\x02\x02\vj\x03\x02\x02\x02" +
		"\ro\x03\x02\x02\x02\x0Fr\x03\x02\x02\x02\x11u\x03\x02\x02\x02\x13w\x03" +
		"\x02\x02\x02\x15z\x03\x02\x02\x02\x17|\x03\x02\x02\x02\x19~\x03\x02\x02" +
		"\x02\x1B\x81\x03\x02\x02\x02\x1D\x84\x03\x02\x02\x02\x1F\x89\x03\x02\x02" +
		"\x02!\x8D\x03\x02\x02\x02#\x92\x03\x02\x02\x02%\x98\x03\x02\x02\x02\'" +
		"\x9D\x03\x02\x02\x02)\xA3\x03\x02\x02\x02+\xAC\x03\x02\x02\x02-\xB6\x03" +
		"\x02\x02\x02/\xBC\x03\x02\x02\x021\xBE\x03\x02\x02\x023\xC0\x03\x02\x02" +
		"\x025\xC2\x03\x02\x02\x027\xC4\x03\x02\x02\x029\xC6\x03\x02\x02\x02;\xC8" +
		"\x03\x02\x02\x02=\xCE\x03\x02\x02\x02?\xD0\x03\x02\x02\x02A\xD2\x03\x02" +
		"\x02\x02C\xD5\x03\x02\x02\x02E\xD8\x03\x02\x02\x02G\xDA\x03\x02\x02\x02" +
		"I\xDC\x03\x02\x02\x02K\xDE\x03\x02\x02\x02M\xE0\x03\x02\x02\x02O\xE3\x03" +
		"\x02\x02\x02Q\xE7\x03\x02\x02\x02ST\x07t\x02\x02TU\x07g\x02\x02UV\x07" +
		"v\x02\x02VW\x07w\x02\x02WX\x07t\x02\x02XY\x07p\x02\x02Y\x04\x03\x02\x02" +
		"\x02Z[\x07u\x02\x02[\\\x07v\x02\x02\\]\x07t\x02\x02]^\x07w\x02\x02^_\x07" +
		"e\x02\x02_`\x07v\x02\x02`\x06\x03\x02\x02\x02ab\x07y\x02\x02bc\x07j\x02" +
		"\x02cd\x07k\x02\x02de\x07n\x02\x02ef\x07g\x02\x02f\b\x03\x02\x02\x02g" +
		"h\x07k\x02\x02hi\x07h\x02\x02i\n\x03\x02\x02\x02jk\x07g\x02\x02kl\x07" +
		"n\x02\x02lm\x07u\x02\x02mn\x07g\x02\x02n\f\x03\x02\x02\x02op\x07-\x02" +
		"\x02pq\x07-\x02\x02q\x0E\x03\x02\x02\x02rs\x07/\x02\x02st\x07/\x02\x02" +
		"t\x10\x03\x02\x02\x02uv\x07(\x02\x02v\x12\x03\x02\x02\x02wx\x07?\x02\x02" +
		"xy\x07?\x02\x02y\x14\x03\x02\x02\x02z{\x07>\x02\x02{\x16\x03\x02\x02\x02" +
		"|}\x07@\x02\x02}\x18\x03\x02\x02\x02~\x7F\x07@\x02\x02\x7F\x80\x07?\x02" +
		"\x02\x80\x1A\x03\x02\x02\x02\x81\x82\x07>\x02\x02\x82\x83\x07?\x02\x02" +
		"\x83\x1C\x03\x02\x02\x02\x84\x85\x07x\x02\x02\x85\x86\x07q\x02\x02\x86" +
		"\x87\x07k\x02\x02\x87\x88\x07f\x02\x02\x88\x1E\x03\x02\x02\x02\x89\x8A" +
		"\x07k\x02\x02\x8A\x8B\x07p\x02\x02\x8B\x8C\x07v\x02\x02\x8C \x03\x02\x02" +
		"\x02\x8D\x8E\x07e\x02\x02\x8E\x8F\x07j\x02\x02\x8F\x90\x07c\x02\x02\x90" +
		"\x91\x07t\x02\x02\x91\"\x03\x02\x02\x02\x92\x93\x07x\x02\x02\x93\x94\x07" +
		"q\x02\x02\x94\x95\x07k\x02\x02\x95\x96\x07f\x02\x02\x96\x97\x07,\x02\x02" +
		"\x97$\x03\x02\x02\x02\x98\x99\x07k\x02\x02\x99\x9A\x07p\x02\x02\x9A\x9B" +
		"\x07v\x02\x02\x9B\x9C\x07,\x02\x02\x9C&\x03\x02\x02\x02\x9D\x9E\x07e\x02" +
		"\x02\x9E\x9F\x07j\x02\x02\x9F\xA0\x07c\x02\x02\xA0\xA1\x07t\x02\x02\xA1" +
		"\xA2\x07,\x02\x02\xA2(\x03\x02\x02\x02\xA3\xA7\x07)\x02\x02\xA4\xA6\v" +
		"\x02\x02\x02\xA5\xA4\x03\x02\x02\x02\xA6\xA9\x03\x02\x02\x02\xA7\xA8\x03" +
		"\x02\x02\x02\xA7\xA5\x03\x02\x02\x02\xA8\xAA\x03\x02\x02\x02\xA9\xA7\x03" +
		"\x02\x02\x02\xAA\xAB\x07)\x02\x02\xAB*\x03\x02\x02\x02\xAC\xB0\x07$\x02" +
		"\x02\xAD\xAF\x04\"\x80\x02\xAE\xAD\x03\x02\x02\x02\xAF\xB2\x03\x02\x02" +
		"\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xB3\x03\x02\x02" +
		"\x02\xB2\xB0\x03\x02\x02\x02\xB3\xB4\x07$\x02\x02\xB4,\x03\x02\x02\x02" +
		"\xB5\xB7\t\x02\x02\x02\xB6\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02" +
		"\xB8\xB6\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBA\x03\x02\x02\x02" +
		"\xBA\xBB\b\x17\x02\x02\xBB.\x03\x02\x02\x02\xBC\xBD\x07-\x02\x02\xBD0" +
		"\x03\x02\x02\x02\xBE\xBF\x07/\x02\x02\xBF2\x03\x02\x02\x02\xC0\xC1\x07" +
		",\x02\x02\xC14\x03\x02\x02\x02\xC2\xC3\x071\x02\x02\xC36\x03\x02\x02\x02" +
		"\xC4\xC5\x07\'\x02\x02\xC58\x03\x02\x02\x02\xC6\xC7\x07.\x02\x02\xC7:" +
		"\x03\x02\x02\x02\xC8\xC9\x07r\x02\x02\xC9\xCA\x07t\x02\x02\xCA\xCB\x07" +
		"k\x02\x02\xCB\xCC\x07p\x02\x02\xCC\xCD\x07v\x02\x02\xCD<\x03\x02\x02\x02" +
		"\xCE\xCF\x07=\x02\x02\xCF>\x03\x02\x02\x02\xD0\xD1\x07?\x02\x02\xD1@\x03" +
		"\x02\x02\x02\xD2\xD3\x07(\x02\x02\xD3\xD4\x07(\x02\x02\xD4B\x03\x02\x02" +
		"\x02\xD5\xD6\x07~\x02\x02\xD6\xD7\x07~\x02\x02\xD7D\x03\x02\x02\x02\xD8" +
		"\xD9\x07#\x02\x02\xD9F\x03\x02\x02\x02\xDA\xDB\x07*\x02\x02\xDBH\x03\x02" +
		"\x02\x02\xDC\xDD\x07+\x02\x02\xDDJ\x03\x02\x02\x02\xDE\xDF\x07}\x02\x02" +
		"\xDFL\x03\x02\x02\x02\xE0\xE1\x07\x7F\x02\x02\xE1N\x03\x02\x02\x02\xE2" +
		"\xE4\t\x03\x02\x02\xE3\xE2\x03\x02\x02\x02\xE4\xE5\x03\x02\x02\x02\xE5" +
		"\xE3\x03\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6P\x03\x02\x02\x02\xE7" +
		"\xEB\t\x04\x02\x02\xE8\xEA\t\x05\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA\xED" +
		"\x03\x02\x02\x02\xEB\xE9\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xECR" +
		"\x03\x02\x02\x02\xED\xEB\x03\x02\x02\x02\b\x02\xA7\xB0\xB8\xE5\xEB\x03" +
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CJsLexer.__ATN) {
			CJsLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CJsLexer._serializedATN));
		}

		return CJsLexer.__ATN;
	}

}

